{"version":3,"sources":["media/Logo.png","App.js","lib/fpixel.js","reportWebVitals.js","index.js"],"names":["App","props","useState","isWalletConnected","setIsWalletConnected","address","setAddress","walletBalance","setWalletBalance","contractBalance","setContractBalance","jadeBalance","setJadeBalance","rewardsBalance","setRewardsBalance","isConnectBtn","setIsConnectBtn","isMineBtn","setIsMineBtn","isRewardsBtn","setIsRewardsBtn","depositAmount","setDepositAmount","isCheckbox","setIsCheckbox","referrerAddress","setReferrerAddress","snackMsg","setSnackMsg","isSnack","setIsSnack","isContestModal","setIsContestModal","jadeMineContract","setJadeMineContract","refLink","window","location","origin","concat","web3","useEffect","localStorage","getItem","handleWalletConnection","search","substring","ethereum","on","accounts","loadAppData","callSnackBar","chainId","reload","snackMessage","withTime","setTimeout","Web3","request","method","then","res","setItem","dataAddress","eth","getBalance","response","bal","parseFloat","utils","fromWei","toString","match","net","getId","Contract","JadeMiner","abi","jadeMine","methods","call","getContractBal","getMyMiners","getJadeBal","jadeRewards","getRewardsBal","params","className","SnackBar","message","ContestModal","src","Logo","alt","disabled","onClick","onChange","e","toWei","target","value","placeholder","type","buyJade","send","from","once","receipt","name","options","fbq","purchaseEvent","currency","catch","err","finally","harvestJade","sellJade","readOnly","href","rel","style","color","fontWeight","fontSize","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.afa8e44b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Logo.61c9c61f.png\";","import './App.css';\nimport { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport { purchaseEvent } from \"./lib/fpixel\";\nimport JadeMiner from './contract/JadeMiner.json'\nimport Logo from './media/Logo.png'\nimport React from 'react';\n\n\nfunction App(props) {\n\n  const [isWalletConnected, setIsWalletConnected] = useState(false);\n  const [address, setAddress] = useState(\"\");\n\n  const [walletBalance, setWalletBalance] = useState(\"0\");\n  const [contractBalance, setContractBalance] = useState(\"0\");\n  const [jadeBalance, setJadeBalance] = useState(\"0\");\n  const [rewardsBalance, setRewardsBalance] = useState(\"0\");\n\n  const [isConnectBtn, setIsConnectBtn] = useState(false);\n  const [isMineBtn, setIsMineBtn] = useState(true);\n  const [isRewardsBtn, setIsRewardsBtn] = useState(false);\n\n  const [depositAmount, setDepositAmount] = useState(0);\n  const [isCheckbox, setIsCheckbox] = useState(true);\n\n  const [referrerAddress, setReferrerAddress] = useState(\"0x0000000000000000000000000000000000000000\");\n\n  const [snackMsg, setSnackMsg] = useState(\"\");\n  const [isSnack, setIsSnack] = useState(false);\n  const [isContestModal, setIsContestModal] = useState(false);\n  \n\n  const [jadeMineContract, setJadeMineContract] = useState(null);\n\n  \n\n  const refLink = window.location.origin.concat(\"?ref=\", address);\n  const mainNetId = 4;\n  const contractAddress = \"0x243BcCBF6bA3d9484e0C535513e9e8c0ca4E37a1\"\n\n  const web3 = window.web3;\n\n  useEffect(() => {\n    if(localStorage.getItem(\"prevCon\") === \"true\") {\n      handleWalletConnection();\n    }\n  }, [])\n\n  useEffect(() => {\n    if(window.location.search) {\n      if(window.location.search.substring(5) !== address) {\n        setReferrerAddress(window.location.search.substring(5));\n      } else {\n        setReferrerAddress(\"0x0000000000000000000000000000000000000000\");\n      }\n    }\n  }, [address])\n\n  useEffect(() => {\n    if(isWalletConnected && isCheckbox === true) {\n      setIsMineBtn(false);\n    } else {\n      setIsMineBtn(true);\n    }\n  }, [isWalletConnected, depositAmount, isCheckbox])\n\n  useEffect(() => {\n    if(isWalletConnected === true) {\n      setIsRewardsBtn(false);\n    } else {\n      setIsRewardsBtn(true);\n    }\n  }, [isWalletConnected])\n\n  \n  if(typeof window.ethereum !== 'undefined') {\n    window.ethereum.on('accountsChanged', (accounts) => {\n      setAddress(accounts[0]);\n      loadAppData(accounts[0]);\n      callSnackBar(\"Account Changed\", true)\n    })\n\n    window.ethereum.on('chainChanged', (chainId) => {\n      window.location.reload();\n      callSnackBar(\"Chain Changed\", true)\n    })\n  }\n  \n  \n\n  const callSnackBar = (snackMessage, withTime) => {\n    if(withTime) {\n      setSnackMsg(snackMessage);\n      setIsSnack(true);\n      setTimeout(() => {\n        setIsSnack(false);\n        setSnackMsg(\"\");\n      }, 3000)\n    } else if(withTime === false) {\n      setSnackMsg(snackMessage);\n      setIsSnack(true);\n    }\n    \n  }\n\n  const handleWalletConnection = async () => {\n    if (typeof window.ethereum !== 'undefined') {\n      if(!isWalletConnected) {\n        window.web3 = new Web3(window.ethereum);\n\n        setIsConnectBtn(true);\n\n        const web3 = window.web3;\n\n        window.ethereum.request({ method: 'eth_requestAccounts' }).then((res) => {\n          setAddress(res[0]);\n          setIsWalletConnected(true);\n          setIsConnectBtn(false);\n          callSnackBar(\"Wallet Connected\", true)\n\n          if(localStorage.getItem(\"prevCon\") === \"true\") {\n\n          } else {\n            localStorage.setItem(\"prevCon\", \"true\");\n          }\n\n          loadAppData(res[0]);\n        })\n\n      } else {\n        setIsWalletConnected(false)\n        callSnackBar(\"Wallet Disconnected\", true)\n\n        setAddress(\"\");\n\n        setWalletBalance(\"0\");\n        setContractBalance(\"0\");\n        setJadeBalance(\"0\");\n        setRewardsBalance(\"0\");\n      }\n      \n    } else {\n      callSnackBar(\"Metamask not Installed\", false)\n    }\n  }\n\n  const loadAppData = async (dataAddress) => {\n    const web3 = window.web3;\n\n    web3.eth.getBalance(dataAddress).then((response) => {\n      const bal = parseFloat(web3.utils.fromWei(response)).toString().match(/^-?\\d+(?:\\.\\d{0,2})?/)[0]\n      setWalletBalance(bal);\n    });\n\n    const networkId = await web3.eth.net.getId()\n    if (networkId === mainNetId) {\n      const jadeMine = await new web3.eth.Contract(JadeMiner.abi, contractAddress)\n      setJadeMineContract(jadeMine)\n\n      const getContractBal = await jadeMine.methods.getBalance().call()\n      setContractBalance(parseFloat(web3.utils.fromWei(getContractBal)).toString().match(/^-?\\d+(?:\\.\\d{0,2})?/)[0]);\n\n      const getJadeBal = await jadeMine.methods.getMyMiners(dataAddress).call()\n      setJadeBalance(parseFloat(getJadeBal).toString().match(/^-?\\d+(?:\\.\\d{0,2})?/)[0]);\n\n      const getRewardsBal = await jadeMine.methods.jadeRewards(dataAddress).call()\n      setRewardsBalance(parseFloat(web3.utils.fromWei(getRewardsBal)).toString().match(/^-?\\d+(?:\\.\\d{0,3})?/)[0]);\n    } else {\n      await window.ethereum.request({\n        method: 'wallet_switchEthereumChain',\n        params: [{ chainId: '0xa86a'}],\n      })\n    }\n  }\n\n  const handleRemineClick = () => {\n    setIsRewardsBtn(true);\n    setIsConnectBtn(true);\n    setIsMineBtn(true);\n\n    callSnackBar(\"Processing...\", false)\n\n    jadeMineContract.methods.harvestJade(referrerAddress).send({ from: address })\n    .once('receipt', (receipt) => {\n      loadAppData(address);\n\n      callSnackBar(\"Transaction Complete\", true);\n    })\n    .catch((err) => {\n      callSnackBar(\"Transaction Failed\", true);\n    })\n    .finally(() => {\n      setIsRewardsBtn(false);\n      setIsConnectBtn(false);\n    })\n  }\n\n  const handleCollectClick = () => {\n    setIsConnectBtn(true);\n    setIsRewardsBtn(true);\n    setIsMineBtn(true);\n\n    callSnackBar(\"Processing...\", false)\n\n    jadeMineContract.methods.sellJade().send({ from: address })\n    .once('receipt', (receipt) => {\n      loadAppData(address);\n\n      callSnackBar(\"Transaction Complete\", true);\n    })\n    .catch((err) => {\n      callSnackBar(\"Transaction Failed\", true);\n    })\n    .finally(() => {\n      setIsRewardsBtn(false);\n      setIsConnectBtn(false);\n    })\n  }\n\n  const handleMineJadeClick = () => {\n    setIsConnectBtn(true);\n    setIsRewardsBtn(true);\n    setIsMineBtn(true);\n\n    callSnackBar(\"Processing...\", false)\n\n    jadeMineContract.methods.buyJade(referrerAddress).send({ from: address, value: depositAmount })\n    .once('receipt', (receipt) => {\n      loadAppData(address);\n\n      purchaseEvent('Purchase', {currency: \"USD\", value: web3.utils.fromWei(depositAmount).toString()})\n\n      callSnackBar(\"Transaction Complete\", true);\n    })\n    .catch((err) => {\n      callSnackBar(\"Transaction Failed\", true);\n    })\n    .finally(() => {\n      setIsRewardsBtn(false);\n      setIsConnectBtn(false);\n      setIsCheckbox(false);\n    })\n  }\n\n  return (\n    <div className=\"app\">\n\n      {isSnack && (<SnackBar message={snackMsg} />)}\n\n      {isContestModal && (<ContestModal />)}\n\n      <div className=\"app__nav\">\n        <img className=\"app__logo\" src={Logo}  alt=\"Ruby Mine Logo\"/>\n      </div>\n\n      <div className=\"app__topinfobar\">\n      </div>\n\n      <div className=\"app__main\">\n        <button disabled={isConnectBtn} onClick={handleWalletConnection} className={isConnectBtn ? \"app__walletconnectdisabled\" : \"app__walletconnect\"}>{isWalletConnected ? \"DISCONNECT\" : \"CONNECT\"}</button>\n\n        <h6 className=\"app__heading\">Mine <span>Jade</span>. Earn <span>BNB</span>. Repeat</h6>\n\n        <div className=\"app__interact\">\n          <div className=\"app__interactmargin\">\n            <div className=\"app__interactstats\">\n              <div className=\"app__interactstatsdata\">\n                <p>Contract</p>\n                <h5>{contractBalance} BNB</h5>\n              </div>\n\n              <div className=\"app__interactstatsdata\">\n                <p>Wallet</p>\n                <h5>{walletBalance} BNB</h5>\n              </div>\n\n              <div className=\"app__interactstatsdata\">\n                <p>Jade</p>\n                <h5>{jadeBalance} JADE</h5>\n              </div>\n            </div>\n\n            <div className=\"app__inputcontainer\">\n              <input onChange={(e) => setDepositAmount(web3.utils.toWei(e.target.value))} placeholder=\"0.1\" className=\"app__inputavax\" type=\"number\" />\n              <div className=\"app__inputavaxsymbol\"><p>BNB</p></div>\n            </div>\n\n            <button onClick={handleMineJadeClick} disabled={isMineBtn} className={isMineBtn ? \"app__minebtndisabled\" : \"app__minebtn\"}>HIRE MINERS</button>\n\n            <div className=\"app__divider\"></div>\n\n            <div className=\"app__interactstatsreward\">\n              <p>Your Rewards</p>\n              <h5>{rewardsBalance} BNB</h5>\n            </div>\n\n            <div className=\"app__rewards\">\n              <button onClick={handleRemineClick} disabled={isRewardsBtn} className={isRewardsBtn ? \"app__rewardsbtndisabled\" : \"app__rewardsbtn\"}>RE-HIRE</button>\n              <button onClick={handleCollectClick} disabled={isRewardsBtn} className={isRewardsBtn ? \"app__rewardsbtndisabled\" : \"app__rewardsbtn\"}>COLLECT</button>\n            </div>\n          </div>\n        </div>\n\n\n        <div className=\"app__statistics\">\n          <div className=\"app__statisticsmargin\">\n            <h5 className=\"app__statisticshead\">Statistics</h5>\n\n            <div className=\"app__statisticsdivider\"></div>\n\n            <div className=\"app__statisticsinfo\">\n              <p>Daily Return</p>\n              <p>Up to 8%</p>\n            </div>\n\n            <div className=\"app__statisticsinfo\">\n              <p>APR</p>\n              <p>2,920%</p>\n            </div>\n\n            <div className=\"app__statisticsinfo\">\n              <p>Deposit Fee</p>\n              <p>8%</p>\n            </div>\n          </div>\n        </div>\n\n\n        <div className=\"app__referral\">\n          <h5>Referral Link</h5>\n\n          <input className=\"app__referralinput\" type=\"text\" readOnly value={refLink}/>\n\n          <p>Earn 12% of the BNB used to mine jade<br/> from anyone who uses your referral link</p>\n        </div>\n\n      <div className=\"app__socials\">\n          <a href=\"https://snowtrace.io/address/0x31A226acD218fe1FD2E6b26767E670e868b6E65f\" target=\"_blank\" rel=\"noreferrer\" className=\"app__socialslinks\"><img  alt=\"SnowTrace Social\" /></a>\n          <a href=\"https://t.me/meta_miners\" target=\"_blank\" rel=\"noreferrer\" className=\"app__socialslinks\"><img  alt=\"Telegram Social\"/></a>\n          <a href=\"https://twitter.com/metaminersdefi\" target=\"_blank\" rel=\"noreferrer\" className=\"app__socialslinks\"><img  alt=\"Twitter Social\"/></a>\n          <a href=\"https://discord.gg/eDxyZQP84H\" target=\"_blank\" rel=\"noreferrer\" className=\"app__socialslinks\"><img  alt=\"Discord Social\"/></a>\n          <a href=\"https://hazecrypto.net/audit/rubymine\" target=\"_blank\" rel=\"noreferrer\" className=\"app__socialslinkshaze\"><img  alt=\"HazeCrypto Social\" /></a>\n      </div>\n\n      <a className=\"app__business\" href=\"mailto:marketing@rubymine.money\">Business Inquiries</a>\n      </div>\n      </div>\n  );\n\n  function SnackBar(props) {\n    return(\n      <div className=\"app__snackbar\">\n        <span>{props.message}</span>\n      </div>\n    )\n  }\n\n  function ContestModal(props) {\n    return(\n      <div className=\"app__contestmodal\">\n        <button className=\"app__contestmodalclose\" onClick={() => setIsContestModal(false)}>Close</button>\n        <div className=\"app__contestmodalmargin\">\n          <h5>Ruby Mine Creators Contest</h5>\n          <p>Win a juicy AVAX price pool without the need of a huge following!</p>\n\n          <h6>For who is this competition?</h6>\n          <p>\n            For anyone who has a social following on Tiktok, Youtube, Twitter, Reddit,.... Small to medium sized accounts. This is for all of us.<br />\n            <br />\n            We will have different measures in place to value your content individually depending on many KPIs such as views, comments, likes, post quality and quantity.<br />\n            <br />\n            <span style={{ color: '#E84142', fontWeight: 600, fontSize: '16px'}}>Prize pool:</span> 15% of the total marketing wallet fees taken by 31st of May. The total prize pool amount will be announced on May 31st.\n          </p>\n\n          <h6>Competition Start: <span>6th of April</span></h6>\n          <h6>Competition End: <span>31st of May</span></h6>\n\n          <h6>Prize pool distribution:</h6>\n          <p>\n            #1 - 30%<br />\n            #2 - 20%<br />\n            #3 - 15%<br />\n            #4 - 10%<br />\n            #5 - 8%<br />\n            #6 - 6%<br />\n            #7 - 4%<br />\n            #8 - 3%<br />\n            #9 - 2%<br />\n            #10 - 2%<br />\n          </p>\n\n          <h6>Competition Details & Rules:</h6>\n          <p>\n            • Put our website link (<a href=\"https://www.rubymine.money\" rel=\"noreferrer\" target=\"_top\">https://rubymine.money</a>) in your post, bio or clearly mention it in the video, otherwise your post will not be valued.<br />\n            • Submit your material to <a href=\"https://t.me/roihazecom\" rel=\"noreferrer\" target=\"_blank\">@roihazecom</a> on TG or Discord.<br />\n            • Post as many times as you wish to increase your chances to win. Not only the quality counts, but also the quantity.\n          </p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","export const purchaseEvent = (name, options = {}) => {\r\n\twindow.fbq('track', name, options)\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}